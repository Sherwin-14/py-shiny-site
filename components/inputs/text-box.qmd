---
title: "Text Box"
sidebar: components 
previewapp: |
  from shiny import App, render, ui

  app_ui = ui.page_fluid(
      ui.input_text("x", "", placeholder="Enter text"),
      ui.output_text_verbatim("txt"),
      {"class": "vh-100 d-flex justify-content-center align-items-center px-4"}
  )

  def server(input, output, session):
      @output
      @render.text
      def txt():
          return f''

  app = App(app_ui, server, debug=True)
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: Text Box
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMArhzxM6lACZw6EgILoAOhFVpUAfTFMAvKI5YoAcziaaAGzHSAFKqYODGLqhFlNFAB5k7YL2WV8JkCAFThvXghXAKDAgFFyOSZ-DFTAgEo8e0cxDGI3aI9w9wA3OQAjKDI+XxKoKzgMrIh01VVZGlY5MrobFzcJfLJoiRY4FhYOUnTEbIcAASHouaZ5qQhZOgx-FY6mOoabGZXHSTgyEToISOjt4qO26HQ9JiVUGw1tcS66HvSwAC+AF0gA
      code: |
        from shiny import ui, render, App
        
        app_ui = ui.page_fluid(
            ui.input_text("text", "Text input", "Enter text..."), #<<
            ui.output_text_verbatim("value"),
        )
        
        def server(input, output, session):
            @output
            @render.text
            def value():
                return input.text()
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_text
          href: https://shiny.posit.co/py/api/ui.input_text.html
          signature: ui.input_text(id, label, value='', *, width=None, placeholder=None, autocomplete='off', spellcheck=None)
      details: |

        <p>A DataTable presents tabular data in a spread sheet like view. </p>

        <p>Follow three steps to display a DataTable in your app:</p>

        <ol>
          <li>
          Add `ui.output_data_frame()` to the UI of your app to create a div in which to display the table. Where you call this function will determine where the table will appear within the layout of the app. For example, ...
          </li>
          <li>
          <p>Define a function within the `server` function that builds your table and uses `render.DataTable()` to return the result. Where`render.DataTable()`will package the table as an HTML data table for display. If your function calls reactive values, Shiny will update your table whenever those values change, in a [reactive fashion]().</p>
          
          <p>To notify Shiny that your function returns a reactive table to display, decorate the function with two decorators:</p>
          
           <ul>
             <li>`@output`</li>
             <li>`@render.data_frame()`</li>
           </ul>

          </li>

          <li>Pass `ui.output_data_frame()` the name of the function that builds the DataTable, as a character string, to indicate which DataTable should be displayed in the div. 
          </li>
        </ol>

---

:::{.component}
:::


