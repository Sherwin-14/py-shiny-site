---
title: "Plot (Matplotlib)"
sidebar: components
preview: |
  <div class="px-3">
  <img style="width: 100%;" src="/images/matplotlib.jpg">
  </div>
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: "Plot (Matplotlib)"
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMASxlWICcyACGKM1AG2LK5oBGWbN14soAZxbcyAHQh0GzFhACu9bOKkRU8gGaNiMaVC7xGqSgHNVNCFMVNWPKABMA+pYg27E-YeMJAAs7TUdlAEF0PBZGSlc4RhjbeXk0VHdbFgBeFlssKCs4dz0uW1cACnkWGryaDDtUVTJ3CX4ExirIWXwWHoA5dQFElmI9FgFfHpiABhiARhm5lgAmGYBKPGra-OJmppbRMi6jns35ddSIeQTxiUSAN0SKxuaYvc43lnuJCRpSdaIbY1AACcQgHSwPGOpjI2R6ERYIQkZGIVkYsDOwJYt2k0IqgOxtRx41yLg8Xh89gJRNq7F+ORJwB6AmIrmw7npEncVh6AF0rsTiXoaFYYlAAB6MmQYCSqARHCQ0iBC2qSjDI45cmKvMgYCAEmIJew0MjYbIAFUYqjglxVqvEEtlcBaZFNXDgXQACqZzCwvdZbCqALKSH5Y+2q9X3FoSrhQYZcLqhhkVKyXMB2h2O50tbDxxNdAAilD+ZojtJqcTIqkYKpFvOuTfSjKiqAq6UyNBi90YTySOLgAlUVkt1tt8jAAF8+UA
      code: |
        import matplotlib.pyplot as plt
        from palmerpenguins import load_penguins
        from shiny import App, render, ui

        app_ui = ui.page_fluid(
            ui.input_slider("n", "Number of bins", 0, 100, 20),
            ui.output_plot("plot"),  #<<
        )

        def server(input, output, session):
            @render.plot(alt="A histogram")  #<<
            def plot():  #<<
                df = load_penguins()
                mass = df["body_mass_g"]

                fig, ax = plt.subplots()
                ax.hist(mass, input.n(), density=True)
                ax.set_title("Palmer Penguin Masses")
                ax.set_xlabel("Mass (g)")
                ax.set_ylabel("Density")

                return fig  #<<

        app = App(app_ui, server, debug=True)

      relevantfunctions:
        - title: ui.output_plot
          href: https://shiny.posit.co/py/api/ui.output_plot.html
          signature: ui.output_plot(id, width='100%', height='400px', *, inline=False, click=False, dblclick=False, hover=False, brush=False, fill=MISSING)
        - title: "@render.plot"
          href: https://shiny.posit.co/py/api/render.plot.html
          signature: render.plot(_fn=None, *, alt=None, width=MISSING, height=MISSING, **kwargs)
---

:::{#component}
:::

## Details

<p>Matplotlib is a library that can be used to create plots.</p>
<p>Follow three steps to display a Matplotlib figure in your app:</p>
<ol>
  <li>
  Add `ui.output_plot()` to the UI of your app to create a div in which to display the figure.
  Where you call this function will determine where the figure will appear within the layout of the app.
  The `id` parameter you provide will be used to link to other parts of the Shiny app.
  </li>
  <li>
  Define a function within the `server()` function that creates the figure.
      <ul>
        <li>The name of the function should be the same value you passed into the `id` parameter
          in your `ui.output_plot()` function call in the UI.
        </li>
        <li>If your function calls reactive values, Shiny will update your figure whenever those values change,
  in a [reactive fashion](https://shiny.posit.co/py/docs/reactive-programming.html).
        </li>
        <li>Your function should return one of the following objects:</li>
          <ul>
            <li>A `matplotlib.figure.Figure` instance</li>
            <li>A `matplotlib.artist.Artist` instance</li>
            <li>A list/tuple of `Figure`/`Artist` instances</li>
            <li>An object with a ‘figure’ attribute pointing to a `matplotlib.figure.Figure` instance</li>
            <li>A `PIL.Image.Image` instance</li>
          </ul>
      </ul>
  </li>
  <li>
  Decorate your plotting function with a `@render.plot()` decorator.
    <ul>
      <li>If your plotting function is not the same as the `id` you used in the `ui.output_plot()`,
  you can add an additional `@output(id=...)` decorator.
  If you use the `@output()` decorator,
  make sure it is __above__ the `@render.plot()` decorator.
      </li>
    </ul>
  </li>
</ol>
