---
title: "Selectize (Single)"
sidebar: components 
previewapp: |
  from shiny import App, Inputs, Outputs, Session, render, ui

  app_ui = ui.page_fluid(
    ui.input_selectize(
        "select",
        "",
        {
            "1": {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"},
            "2": {"2A": "Choice 2A", "2B": "Choice 2B", "2C": "Choice 2C"}
        }
    ),
    ui.output_text("value"),
      {"class": "vh-100 d-flex justify-content-center align-items-center px-4"}
  )

  def server(input: Inputs, output: Outputs, session: Session):
      @output
      @render.text
      def value():
          return f""

  app = App(app_ui, server)
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: Selectize List
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymlnAtxCZDgBecHYQjmFMymBePn6RePbhDpEAyt6+wgBGxAAecQmJIPmJjpEAjJGITIVgpSIVEWAAwmzEHIRwTLVxDaUAQvWRza3tnf34PY0DTS1tHaWTYAC+8aHFYZEATPXVG3VIDUOzTLvdm2OVgzMjG2MSmwsX08MdGwuLRWHLH44wChb+qB8ugAKnQFHAigBKFZhQzEdxuDwUbJkOxgABuUCsELA0NUkNUhIgshorDk6LkNlc7gk8LIiIkXhYLA4pEhiCKAAE6YiuVJiXIMMiyEUSUxMdibOzvg4pGQFHRQjRIiBqWQMNF0lL3mAiep0HpROgbBptBxGeS5JClgBdIA
      code: |
        from shiny import App, render, ui
        
        app_ui = ui.page_fluid(
            ui.input_selectize( #<<
                "select", #<<
                "Select box", #<<
                { #<<
                    "1": {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"}, #<<
                    "2": {"2A": "Choice 2A", "2B": "Choice 2B", "2C": "Choice 2C"} #<<
                }, #<<
                multiple=True #<<
            ), #<<
            ui.output_text("value"),
        )
        
        def server(input, output, session):
            @output
            @render.text
            def value():
                return f"{input.select()}"
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_selectize
          href: https://shiny.posit.co/py/api/ui.input_selectize.html
          signature: ui.input_selectize(id, label, choices, *, selected=None, multiple=False, width=None)
        
---

:::{#component}
:::

## Details

<p>A DataTable presents tabular data in a spread sheet like view. </p>

<p>Follow three steps to display a DataTable in your app:</p>

<ol>
  <li>
  Add `ui.output_data_frame()` to the UI of your app to create a div in which to display the table. Where you call this function will determine where the table will appear within the layout of the app. For example, ...
  </li>
  <li>
  Define a function within the `server` function that builds your table and uses `render.DataTable()` to return the result. Where`render.DataTable()`will package the table as an HTML data table for display. If your function calls reactive values, Shiny will update your table whenever those values change, in a [reactive fashion]().
  
  To notify Shiny that your function returns a reactive table to display, decorate the function with two decorators:
  
   <ul>
     <li>`@output`</li>
     <li>`@render.data_frame()`</li>
   </ul>

  </li>

  <li>Pass `ui.output_data_frame()` the name of the function that builds the DataTable, as a character string, to indicate which DataTable should be displayed in the div. 
  </li>
</ol>