---
title: "Sidebars"
description: "A sidebar layout creates a sidebar in your Shiny app, typically used for inputs, and a large main area, typically used for outputs." 
---

A sidebar layout creates a sidebar, typically used for inputs, and a large main area, typically used for outputs. 

## Relevant functions

- [ui.layout_sidebar](https://shiny.posit.co/py/api/ui.layout_sidebar.html)  
  `ui.layout_sidebar(sidebar, *args, fillable=True, fill=True, bg=None, fg=None, border=None, border_radius=None, border_color=None, gap=None, padding=None, height=None, **kwargs)`

- [ui.sidebar](https://shiny.posit.co/py/api/ui.sidebar.html#shiny.ui.sidebar)  
  `ui.sidebar(*args, width=250, position='left', open='desktop', id=None, title=None, bg=None, fg=None, class_=None, max_height_mobile=None, gap=None, padding=None)`


:::{.border-bottom .blue .mt-6 .mb-5}
:::

## Sidebar on the left

:::{.column-screen-inset-right style="max-width:800px;"}
::: {.panel-tabset}

## Preview

<iframe style="height:110px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAZTdPbzCASjxLAKtpDEcyVCclCgAPZwA3ODovMj4LMByyMIlUO0I4NmJDdzo1ABU6SThYxKt4uW75CHcaVkKCny4Msgk0qYkWOBZXUljEHqZUKCW5BXR1UXQzRRUOebHC2LAAXwBdIA" title="Sidebar on the left">
</iframe> 

## Code

```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.layout_sidebar( #<<
        ui.sidebar("Sidebar"), #<<
        "Main content"
    ), #<<
)

def server(input, output, session):
    pass

app = App(app_ui, server)
```
:::
<p class="text-end my-0 p-90 me-2 pt-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAZTdPbzCASjxLAKtpDEcyVCclCgAPZwA3ODovMj4LMByyMIlUO0I4NmJDdzo1ABU6SThYxKt4uW75CHcaVkKCny4Msgk0qYkWOBZXUljEHqZUKCW5BXR1UXQzRRUOebHC2LAAXwBdIA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

Follow these steps to add a left-side sidebar to your app: 

  1. Add `ui.layout_sidebar()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.layout_sidebar()` creates a sidebar layout.

  2. Pass `ui.sidebar()`as the first argument of `ui.layout_sidebar()` to create the sidebar. By default, the `position` parameter of `ui.sidebar()` is "left" and the sidebar will appear on the left. 

  3. Supply additional components (output components, cards, text, etc.) to `ui.layout_sidebar()` to define the contents of the main content area.

:::{.border-bottom .blue .my-5}
:::

## Sidebar on the right

:::{.column-screen-inset-right style="max-width:800px;"}
::: {.panel-tabset}

## Preview

<iframe style="height:105px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAZTdPbzCJAVcyDlI1MLoOHTYyMIBKPEsAq2kMRzJUJyUKAA9nADc4Oi9EmAswKqz8JlQ7Qjg2YkN3OjUAFTpJOGz8q1y5SfkIdxpWerqfLjKyCRKNiRY4FldSbMQpzqgDuQV0dVF0M0UVDl2V+uywAF8AXSA" title="Sidebar on the right">
</iframe> 

## Code

```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.layout_sidebar( #<<
        ui.sidebar("Sidebar", position="right"), #<<
        "Main content"
    ), #<<
)

def server(input, output, session):
    pass

app = App(app_ui, server)
```
:::
<p class="text-end my-0 p-90 me-2 pt-2"><a  href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAZTdPbzCJAVcyDlI1MLoOHTYyMIBKPEsAq2kMRzJUJyUKAA9nADc4Oi9EmAswKqz8JlQ7Qjg2YkN3OjUAFTpJOGz8q1y5SfkIdxpWerqfLjKyCRKNiRY4FldSbMQpzqgDuQV0dVF0M0UVDl2V+uywAF8AXSA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

Follow these steps to add a right-side sidebar to your app: 
  
  1. Add `ui.layout_sidebar()` inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.layout_sidebar()` creates a sidebar layout.
  
  2. Pass `ui.sidebar()`as the first argument of `ui.layout_sidebar()` to create the sidebar. 
  
  3. Pass `position="right"` to `ui.sidebar()`. The `position` argument controls where the sidebar appears relative to the main content.
  
  3. Supply components (e.g., inputs) to `ui.sidebar()` to define the sidebar's contents. Supply additional components (e.g., output components, cards, etc.) to `ui.layout_sidebar()` to define the contents of the main content area. 

:::{.border-bottom .blue .my-5}
:::

## Sidebars on the left and right

:::{.column-screen-inset-right style="max-width:800px;"}
::: {.panel-tabset}

## Preview

<iframe style="height:105px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAGTgaYSDPbzCASjxLAKtpW3tHZ1iQ31TU9JzvCzAAJQ4dNhi3OLowiQFXMg5SNTC6CqrE5L98-3Ss1CclCgAPZwA3ODovZpgSsbJ6plQ7Qjg2YkN3OjUAFTpJOCSUvqsPQR21ADEoQxY4U4CT3tTUKBMTLh01AAYnl4JORydw0VjTKY+LhDMgSQZOCQPFiuUgJRBPd7I4HQdDqUToMyKFQcREQ6ZAiBgAC+AF0gA" title="Sidebars on the left and right">
</iframe> 

## Code

```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.layout_sidebar( #<<
        ui.sidebar("Left sidebar"), #<<
        ui.layout_sidebar( #<<
            ui.sidebar("Right sidebar", position="right"), #<<
            "Main content",
            border=False #<<
        ), #<<
        padding=0 #<<
    ), #<<
)

def server(input, output, session):
    pass

app = App(app_ui, server)
```
:::
<p class="text-end my-0 p-90 me-2 pt-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAGTgaYSDPbzCASjxLAKtpW3tHZ1iQ31TU9JzvCzAAJQ4dNhi3OLowiQFXMg5SNTC6CqrE5L98-3Ss1CclCgAPZwA3ODovZpgSsbJ6plQ7Qjg2YkN3OjUAFTpJOCSUvqsPQR21ADEoQxY4U4CT3tTUKBMTLh01AAYnl4JORydw0VjTKY+LhDMgSQZOCQPFiuUgJRBPd7I4HQdDqUToMyKFQcREQ6ZAiBgAC+AF0gA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

To create a layout with two sidebars, nest `ui.layout_sidebar()` calls. Follow these steps:
  
  1. Add the first `ui.layout_sidebar()` call inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.layout_sidebar()` creates a sidebar layout.
  2. Pass `ui.sidebar()` and another call `ui.layout_sidebar()` to `ui.layout_sidebar()`. This will create a sidebar layout within another sidebar layout.
  3. Set the `padding` argument of the _first_ `ui.layout_sidebar()` call to `0` to remove any padding. 
  4. For the _second_ `ui.layout_sidebar()` call, supply `ui.sidebar()` as the first argument to create the second sidebar. Set `position="right"` to position this sidebar on the right. Pass whatever content you want as the second argument of `ui.layout_sidebar()` to define the main panel content. 
  5. Set the `border` argument of the _second_ `ui.layout_sidebar()` call to `False`. This removes the border around the nested sidebar layout. 
  6. Add desired inputs or other sidebar content inside both `ui.sidebar()` calls. 


:::{.border-bottom .blue .my-5}
:::

## Two sidebars on the left

:::{.column-screen-inset-right style="max-width:800px;"}
::: {.panel-tabset}

## Preview

<iframe style="height:105px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAZTdPbyYARjCASjxLAKtpW3tHZyDo0L9UgPSckIsIqJCmACZE5PyC63Ss1CclCgAPZwA3ODovMj5S9rIwiVQ7Qjg2YkN3OjUAFTpJOCSU+qsPQVm1ADEoQxY4NYDVuoDUKBMTLh01AAZj04S5OXcaVh7uny5msgkmpwSQ4sVykBKIY4XEEvaDodSidBmRQqDhAz49Z4QMAAXwAukA" title="Two sidebars on the left">
</iframe> 

## Code

```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.layout_sidebar( #<<
        ui.sidebar("Sidebar 1"), #<<
        ui.layout_sidebar( #<<
            ui.sidebar("Sidebar 2"), #<<
            "Main content",
            border=False #<<
        ), #<<
        padding=0 #<<
    ), #<<
)

def server(input, output, session):
    pass

app = App(app_ui, server)
```
:::
<p class="text-end my-0 p-90 me-2 pt-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0LEa-5tXdy8fGTAAZTdPbyYARjCASjxLAKtpW3tHZyDo0L9UgPSckIsIqJCmACZE5PyC63Ss1CclCgAPZwA3ODovMj5S9rIwiVQ7Qjg2YkN3OjUAFTpJOCSU+qsPQVm1ADEoQxY4NYDVuoDUKBMTLh01AAZj04S5OXcaVh7uny5msgkmpwSQ4sVykBKIY4XEEvaDodSidBmRQqDhAz49Z4QMAAXwAukA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

To create a layout with two sidebars on one side, nest `ui.layout_sidebar()` calls. The process is identical to creating a layout with one left and one right sidebar, except that both sidebars will have `position="left"` or `position="right"`. Follow these steps to create two sidebars on the left:
  
  1. Add the first `ui.layout_sidebar()` call inside any Shiny UI page method (e.g., `ui.page_fluid()`). `ui.layout_sidebar()` creates a sidebar layout.
  2. Pass `ui.sidebar()` and another call `ui.layout_sidebar()` to `ui.layout_sidebar()`. This will create a sidebar layout within another sidebar layout.
  3. Set the `padding` argument of the _first_ `ui.layout_sidebar()` call to `0` to remove any padding. 
  4. For the _second_ `ui.layout_sidebar()` call, supply `ui.sidebar()` as the first argument to create the second sidebar. Pass whatever content you want as the second argument of `ui.layout_sidebar()` to define the main panel content. 
  5. Set the `border` argument of the _second_ `ui.layout_sidebar()` call to `False`. This removes the border around the nested sidebar layout. 
  6. Add desired inputs or other sidebar content inside both `ui.sidebar()` calls. 

If you want both sidebars to appear on the right, pass `position="right"` to both `ui.sidebar()` calls.
  

:::{.border-bottom .blue .my-5}
:::

## Sidebar within a card

:::{.column-screen-inset-right style="max-width:800px;"}
::: {.panel-tabset}

## Preview

<iframe style="height:125px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQlDrnL159IyGo2YpLJKWHE3AARvYWEM7h1q5+AcF0FmAAyv5B9jJgAJR4ThEuWl5kqN5KFAAePgBucHTBZHzxpWRpEqjuhHBsxIYBdGoAKnSScOnZ4ZkjwxATcgE0rFWVcVyFZBL5yxIscCx+pOmII6hQ23In0OjqouhmiiocG-NVE2AAvgC6QA" title="Sidebar within a card">
</iframe> 

## Code

```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.card( #<<
        ui.layout_sidebar( #<<
            ui.sidebar("Sidebar"), #<<
            "Main content",
        ), #<<
    ) #<<
)

def server(input, output, session):
    pass


app = App(app_ui, server)
```
:::
<p class="text-end my-0 p-90 me-2 pt-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQlDrnL159IyGo2YpLJKWHE3AARvYWEM7h1q5+AcF0FmAAyv5B9jJgAJR4ThEuWl5kqN5KFAAePgBucHTBZHzxpWRpEqjuhHBsxIYBdGoAKnSScOnZ4ZkjwxATcgE0rFWVcVyFZBL5yxIscCx+pOmII6hQ23In0OjqouhmiiocG-NVE2AAvgC6QA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::

Follow these steps to add a sidebar within a card to your app:
    
  1. Add `ui.card()` to the UI of your app to create a card.
  2. Pass `ui.layout_sidebar()` to `ui.card()` to define a sidebar layout within the card.
  3. Add `ui.sidebar()` and additional elements to `ui.layout_sidebar()` to define the sidebar and main content as usual.
  4. Add inputs or other components as desired to `ui.sidebar()` to define the sidebar's contents.

:::{.border-bottom .blue .my-5}
:::

## Collapsed sidebar

:::{.column-screen-inset-right style="max-width:800px;"}
::: {.panel-tabset}

## Preview

<iframe style="height:105px;" class="mb-0 w-100" src="https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0zTAMQAPAGW1qHSGK7uXj4yYADKbp7esRLEqJRqsYSGxCxwJrEAlBKBwRChobEAslBcTCTklGSxIVbF-kFyhXJy7jSscHQAboNmXKhOqU4TZBJ5LK6khYitTKhQCz3Q6Oqi6GaKKhxzgyN0hWAAvgC6QA" title="Collapsed sidebar">
</iframe> 

## Code

```{.python filename="app.py" }
from shiny import App, ui

app_ui = ui.page_fluid(
    ui.layout_sidebar(
        ui.sidebar("Sidebar", open="closed"), #<<
        "Main content" 
    ), 
)

def server(input, output, session):
    pass

app = App(app_ui, server)
```
:::
<p class="text-end my-0 p-90 me-2 pt-2"><a href="https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxMArhwA6EOWlQB9aUwC8UjligBzOEpoAbaQBMAFHKZXNGQ1GzFJZJSw4m4AIyh0zTS9YDpDFd3Lx8ZMABlN09vCIliVEo1CMJDYhY4EwiASgl-AKsIgFkoLiYSckoyCIKmPL8IHLk5dxpWODoAN06zLlQnBKcBsglMlldSHMQ61CgJluh0dVF0M0UVDjHOnrocsABfAF0gA"><i class="bi bi-pencil me-1"></i> Edit in Shinylive</a></p>
:::


`ui.sidebar()` has an `open` parameter that defines whether the sidebar appears open or closed when the app launches. To create a sidebar that is initially closed, set the `open` parameter to `"closed"`.  
  
The other options for `open` are:
  
  * `"desktop"`: The default. The sidebar starts open on a desktop screen and closed on mobile.
  * `"open"`: The sidebar starts open and can be closed.
  * `"always"`: The sidebar is always open and cannot be closed.

