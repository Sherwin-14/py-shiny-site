---
title: Action Button
sidebar: components
appPreview:
  file: components/inputs/action-button/app-preview.py
listing:
- id: example
  template: ../../_partials/_new_component-example.ejs
  template-params:
    dir: components/inputs/action-button/
  contents:
  - title: Preview
    file: app-detail-preview.py
    height: 200
  - title: Express
    file: app-express.py
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQGJkAxASQA0BZAURQCU4B3AE4BLKsigBncRGScAHukFwJUjOgA6EAGaDSMZBIAWwiLmTCY6UoIrIAgpiJKoxCsIBucJ9QAmcQUQArsKammoA+sHIALzIwThQAOZw4VoANsE+ABSayHHCWCbogRThLm7k4QBGJRTkOWiuwpU1FHUQ6oTInXZN5J0AlER0ADwjuflYpCXFpVRyFA1kgZT+g5oDoRB+Wgb+noJZRSVE0xSzRBLKEs0QA4gTAAJK2-5Y84ubMsjPcOUecCwcE8lCOEFmWH+LVq5C+eR2yGWq0O9wmeTySgogUEMi0nRAxwokL6EGqMIgWQGAF9Ols1DF7JgshFgpd9v4vl0wBRcOgEChuXAFmAqQBdIA
  - title: Core
    file: app-core.py
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQDMAnUmZAZwAsBLCXZTmdKQYVkAQUxEGcKMQqcAbnEnUAJnAZEArpwA6EPRnQB9bcgC8ybTigBzOEboAbbSoAUe5Jc5Zu6TRSMZOXIjACN-CnJ3NFlOEPCKSP1CZB0wUVjyNIBKIgBiAB4Cjy8sUn8-AKoADwposk1KdRy9bL09NTo2dUUGV19-InKKSqJWOFZWOIhsxBKAASkINQYsGrq2iE9F6VjFLDhFSn6ISqwg6bCI8k3PTuQGpr7Zks9PKQpNBi26NJABijnTIQK6JKLZAC+aXa0Ew5jEmFchhMnDGPXUmxSYAouHQCBQ2LgtTAEIAukA
- id: relevant-functions
  template: ../../_partials/_new_relevant-functions.ejs
  template-params:
    dir: components/inputs/action-button/
  contents:
  - title: ui.input_action_button
    href: https://shiny.posit.co/py/api/ui.input_action_button.html
    signature: ui.input_action_button(id, label, *, icon=None, width=None, **kwargs)
  - title: reactive.event
    href: https://shiny.posit.co/py/api/reactive.event.html
    signature: reactive.event(*args, ignore_none=True, ignore_init=False)
---

:::{#example}
:::

:::{#relevant-functions}
:::

## Details

An action button appears as a button and has a value that increments each time the user presses the button.

Follow these steps to add an action button to your app:

  1. Add `ui.input_action_button()` to the UI of your app to create an action button. Where you call this function will determine where the button will appear within the app's layout.

  2. Specify the `id` and `label` parameters of `ui.input_action_button()` to define the button's identifier and label.

The value of an input component is accessible as a reactive value within the `server()` function. To access the value of an action button:

  1. Use `input.<action_button_id()>` (e.g., `input.action_button()`) to access the value of the action button. The server value of an action button is an integer representing the number of clicks.

See also: [Action Link](../action-link/index.qmd)
