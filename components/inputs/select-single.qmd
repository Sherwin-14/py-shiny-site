---
title: "Select (Single)"
sidebar: components 
previewapp: |
  from shiny import App, Inputs, Outputs, Session, render, ui

  app_ui = ui.page_fluid(
    ui.input_select(
        "select",
        "",
        {
            "1": {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"},
            "2": {"2A": "Choice 2A", "2B": "Choice 2B", "2C": "Choice 2C"}
        },
    ),
    ui.output_text("value"),
      {"class": "vh-100 d-flex justify-content-center align-items-center px-4"}
  )

  def server(input: Inputs, output: Outputs, session: Session):
      @output
      @render.text
      def value():
          return f""

  app = App(app_ui, server)
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: Select List
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymlnAtxCZOxCOQUzKYF4+fqF49sEOoQDK3r7CAEbEAB5RMbEg2bGOoQCMoYhMuWCFIiUhYADCbMQchHBMlVE1hQBC1aH1jc2t3fgdtT11DU0thaNgAL7RgflBoQBM1eUrVUg1fZNMm+2rQ6W9EwMrQxKrMyfj-S0rM7N5QfN5AJQLQYbE7m4eFHS-lCADcoFY4KFPqp3qo4RBZDRWHIQXIbK53BJfmR-hIvCwWBxSO9EHkAALY-7kqQIuQYQFkPKIphgiE2EkvRxSMgKOiBGihEAYsgYcLJdnPMDw9ToPSidA2DTaDh4lFyd5zAC6QA
      code: |
        from shiny import App, render, ui
        
        app_ui = ui.page_fluid(
            ui.input_select( #<<
                "select", #<<
                "Select box", #<<
                { #<<
                    "1": {"1A": "Choice 1A", "1B": "Choice 1B", "1C": "Choice 1C"}, #<<
                    "2": {"2A": "Choice 2A", "2B": "Choice 2B", "2C": "Choice 2C"} #<<
                }, #<<
            ), #<<
            ui.output_text("value"),
        )
        
        def server(input, output, session):
            @output
            @render.text
            def value():
                return f"{input.select()}"
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_select
          href: https://shiny.posit.co/py/api/ui.input_select.html
          signature: ui.input_select(id, label, choices, *, selected=None, multiple=False, selectize=False, width=None, size=None)
      details: |

        <p>A DataTable presents tabular data in a spread sheet like view. </p>

        <p>Follow three steps to display a DataTable in your app:</p>

        <ol>
          <li>
          Add `ui.output_data_frame()` to the UI of your app to create a div in which to display the table. Where you call this function will determine where the table will appear within the layout of the app. For example, ...
          </li>
          <li>
          Define a function within the `server` function that builds your table and uses `render.DataTable()` to return the result. Where`render.DataTable()`will package the table as an HTML data table for display. If your function calls reactive values, Shiny will update your table whenever those values change, in a [reactive fashion]().
          
          To notify Shiny that your function returns a reactive table to display, decorate the function with two decorators:
          
           <ul>
             <li>`@output`</li>
             <li>`@render.data_frame()`</li>
           </ul>

          </li>

          <li>Pass `ui.output_data_frame()` the name of the function that builds the DataTable, as a character string, to indicate which DataTable should be displayed in the div. 
          </li>
        </ol>

      variations:
        - title: Filterable Table
          description: An optional place for a description here that goes about this long but then (oh my gosh!) it's now going even longer to show what the line-height looks like.
          preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACVKAG3jtUoHMBXAJYQAzkwExUxOmSZtiUACYB9bhH5DhAHQj1GTYQAsh2MRKkyAgujxM6lBXDo3hcYcIGkbg7dtXqRTAC8svLKfoIiABQAlD7Q6EqCQUyCWFA8cEo0bIIKkdpMKQIYxHxkqGVKClBkUFl0sHD5YOEaVTSaYLEQ3doONPqOAG6OkUIVZDal5WXOru6k0YgFhUwAAtMTK4VrdhAOdBjVtfWN20z9LLwRwu0xyxCrT7ZwZHx0j3sHGAAiNVAAFSgACM2E1zs9Vq0RHgIZCmDQBGwKHRRMEAXQ+HA4YVevFUMkrKhImhUIkBHM6CM6NEwABfAC6QA
          code: |
            from palmerpenguins import load_penguins
            from shiny import App, render, session, ui

            penguins = load_penguins()

            app_ui = ui.page_fluid(
              ui.output_data_frame("penguins_df")
            )

            def server(input, output, session):
                @output
                @render.data_frame
                def penguins_df():
                    return render.DataTable(
                        penguins,
                        filters = True #<<
                    )

            app = App(app_ui, server)
---

:::{.component}
:::
