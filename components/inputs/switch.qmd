---
title: "Switch"
sidebar: components 
preview: |
  <div class="px-4">
  <div class="form-group shiny-input-container">
  <p class="py-0">
  <div class="form-check form-switch">
  <input id="x" class="form-check-input shiny-bound-input" type="checkbox" checked> <label class="form-check-label" for="x">Make it switchable</label>
  </div>
  </p>
  </div>
  </div>
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: Switch
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMArhzxM6lACZw6EgILoAOhFVpUAfTFMAvKI5YoAcziaaAGzHSAFKqYODGLqhFlNLAO4cyhNnbAvHz9lfCZQgGVvXzZQiQAxKAsWOABKPHtHMQxiN1d3MQCANySROFD01VTVVVkaVjkiuRsXNwlcsnyJFJYWDlJUxEyHAAEO-OGmEakIWToMMUm6phKrOBtBycdJODIROgheCHyMIJiNmuh0PSYlVBsNbXEGuia6VLAAXwBdIA
      code: |
        from shiny import ui, render, App
        
        app_ui = ui.page_fluid(
            ui.input_switch("switch", "Switch", False), #<<
            ui.output_ui("value"),
        )
        
        def server(input, output, session):
            @render.ui
            def value():
                return input.switch()
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_switch
          href: https://shiny.posit.co/py/api/ui.input_switch.html
          signature: ui.input_switch(id, label, value=False, *, width=None)
---

:::{#component}
:::

## Details

A switch allows you to select between logical values.

To add a switch to your app:

  1. Add `ui.input_switch()` to the UI of your app to create a switch. Where you call this function will determine where the switch will appear within the app's layout. 

  2. Specify the `id` and `label` parameters of `ui.input_switch()` to define the identifier and label of the switch. 

  3. By default, the `value` parameter, which defines the switch's initial value, is `False`. If you'd like the initial value to be `True`, set `value` equal to `True`.

The value of an input component is accessible as a reactive value within the `server()` function. To access the value of a switch:

  1. Use `input.<switch_id>()` (e.g., `input.switch()`) to access the value of the switch. The server value of a switch is `True` if checked and `False` otherwise. 
