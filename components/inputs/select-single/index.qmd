---
title: Select (Single)
sidebar: components
appPreview:
  file: components/inputs/select-single/app-preview.py
listing:
- id: example
  template: ../../_partials/components-detail-example.ejs
  template-params:
    dir: components/inputs/select-single/
  contents:
  - title: Preview
    file: app-core.py
    height: 200
  - title: Express
    file: app-express.py
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQGJkAxASQA0BZAURQCU4B3AE4BLKsigBncRGScAHukFwJUjOgA6EAGaDSMZBIAWwiLmTCY6UoIrIAgpiJKIAEziCiAV2GbNagPreyAC8yN44UADmcP5aADbeLgAUmshpYcJYJuieFP4ScHFwxBRJyHQAPBWp6bXqYAVFJfVEldUyten1AMqFxbZQMqToFMLkyABGhaT8iC3lVTWdyCD1AIx29Sj1AMKGpMLEcMgb8+sAQlvIu-uHx2uXhNdgaztXNwdHJ29gAL6tiw6aQAlAD2rVwqRcjk8lQ5KV6gA3KAJOD1UGaYG+VxwLQGdyI9xJbK5IhQigwogFFRjCDAuZA5AAAWcbkEWDhFCWyDceORqKS9O5tSUFE8ghkWnqIBJFCwjX6gt+9WxahC9kwSQC3ipBPcWIgTzAFFw6AQKGNcHhfwAukA
  - title: Core
    file: app-core.py
    shinylive: https://shinylive.io/py/editor/#code=NobwRAdghgtgpmAXAAjFADugdOgnmAGlQGMB7CAFzkqVQDMAnUmZAZwAsBLCXZTmdKQYVkAQUxEG1ACZwGRAK6cAOhFUZ0AfSXIAvMiU4oAczia6AGyXSAFKuQODnLN3QKKm1nAtxiFG8gAxAA8wfaOEcpgXj5+UUQhYRARkWAAyt6+IlDJpOgUnOTIAEbepADuiPFBoeEpyCBRAIyiUShRAMLspJzEcMgt1c0AQm3Ind29-U2jhONgTR1jEz19A0tgAL4JtcmOAJQ7SRGGpO5uHlQAHv5RAG5QVnBRh6r7qqqydGxyd3I2rncRDOFAuRC8rFYhQg+yqewcAAEpBBZAwsNcKHVkF9kA8njZYViIlIKAoGMk6FEQICKFgYlkCZsoh9oJg9GJMDYNNpOODfnJ3hA5mAKLh0AgUCK4DctgBdIA
- id: relevant-functions
  template: ../../_partials/components-detail-relevant-functions.ejs
  template-params:
    dir: components/inputs/select-single/
  contents:
  - title: ui.input_select
    href: https://shiny.posit.co/py/api/ui.input_select.html
    signature: ui.input_select(id, label, choices, *, selected=None, multiple=False,
      selectize=False, width=None, size=None)
- id: variations
  template: ../../_partials/components-variations.ejs
  template-params:
    dir: components/inputs/select-single/
  contents:
  - title: Select list with grouped choices
    description: To group the choices into categories, supply the `choices` argument
      with a dictionary of dictionaries. `ui.input_select()` will use the top-level
      keys as group labels.
    apps:
    - title: Express
      file: app-variation-select-list-with-grouped-choices-express.py
      shinylive: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymlnAtxCZG0wAxAA8wfaOEcpgXj5+URIhYRARkWAAyt6+wlDJxKhkHKRMAEbexADuiPFBoeEpTCA1SfX1UQCMUYgN7SKdTFEAwmzEHIRwTG29+P1gbQBCfYPDo+Pz1e0Di2BDI2MTm2AAvgm1yS2pAEx9IFEXU11Lu+N362AXC0gzOytM768XBwe22WewBUUOTTqKWOkLODgAlCdmo5DMR3G4PBQAB7+KIANygVjgUURqnhqlUshorDkeLkNlc7gkaLIGIkXhYLEKEHhVThTAAAlIILI6BhsWQoVSmASiTZeVCIlIyAo6MkaFEQIyyBgYll5YcohToOg9KJ0DYNNoOOzaXJ4UcALpAA
    - title: Core
      file: app-variation-select-list-with-grouped-choices-core.py
      shinylive: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymlnAtxCZG0wAxAA8wfaOEcpgXj5+URIhYRARkWAAyt6+wlDJxKhkHKRMAEbexADuiPFBoeEpTCA1SfX1UQCMUYgN7SKdTFEAwmzEHIRwTG29+P1gbQBCfYPDo+Pz1e0Di2BDI2MTm2AAvgm1yS2pAEx9IFEXU11Lu+N362AXC0gzOytM768XBwe22WewBUUOTTqKWOkLODgAlCdmo5DMR3G4PBQAB7+KIANygVjgUURqnhqlUshorDkeLkNlc7gkaLIGIkXhYLEKEHhVThTAAAlIILI6BhsWQoVSmASiTZeVCIlIyAo6MkaFEQIyyBgYll5YcohToOg9KJ0DYNNoOOzaXJ4UcALpAA
---

:::{#example}
:::

:::{#relevant-functions}
:::

## Details

A select list creates a way to select one or more items from a list.

To use a select list that allows you to select a <em>single</em> item:

  1. Add `ui.input_select()` to the UI of your app to create a select list. Where you call this function will determine where the select list appears within the app's layout.

  2. Specify the `id` and `label` parameters of `ui.input_select()` to define the identifier and label of the select list.

  3. Supply the `choices` parameter with either a list or dictionary of choices. If `choices` is a list, its elements become the select list values and labels. If `choices` is a dictionary, `ui.input_select()` uses the dictionary keys as the list values and the dictionary values as the list labels.

  You can also supply with `choices` a dictionary of dictionaries. `ui.input_select()` will use the top-level keys as group labels. See the <em>Select list with grouped choices</em> variation.

  4. The `multiple` parameter controls whether you can select multiple items at once. By default, `multiple` is `False`.

The value of an input component is accessible as a reactive value within the `server()` function. To access the value of a select list:

  1. Use `input.<select_id>()` (e.g., `input.select()`) to access the selected value. The server value of a select list is a list of strings. When `multiple=False`, this list will have length 1.

See also: [Select (Multiple)](../select-multiple/index.qmd) and [Selectize (Multiple)](../selectize-multiple/index.qmd). Select inputs and selectize inputs are similar, but have different interfaces and provide different ways of selecting multiple options. Selectize inputs also allow you to deselect items.

:::{#variations}
:::
