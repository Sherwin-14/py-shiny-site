---
title: "Numeric Input"
sidebar: components 
previewapp: |
  from shiny import App, render, ui

  app_ui = ui.page_fluid(
      ui.input_numeric("x", "", value=100),
      ui.output_text_verbatim("txt"),
      {"class": "vh-100 d-flex justify-content-center align-items-center px-4"}
  )

  def server(input, output, session):
      @output
      @render.text
      def txt():
          return f""

  app = App(app_ui, server, debug=True)
listing:
  id: component
  template: ../_partials/components-detail.ejs
  contents:
    - title: Numeric Input
      preview: https://shinylive.io/py/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbJjmVYnTJMAgujxM6lACZw6EgK4cAOhFVpUAfSVMAvEyVYoAcziaaAGyXSAFKqYODHDF1QKymiAvh0OhO5Decn7K+EyhAHJBvoS8EG5koRIAjBIwXLqpTDBQAB6ZAAwAlHj2jobE7gmaFLkeAG5yAEZQZHwB9VBWcKElqkWqgxCyNKxyjXQ2ru4SlWQJEixwLCwcpEWIZQ4AAnMJW0zbUsNyGLWJEI5MI0yd3TYbB1dSZAp0l9NkGF4+fg9D6nQelE6BsGm0HEW4zkRTAAF8ALpAA
      code: |
        from shiny import App, render, ui
        
        app_ui = ui.page_fluid(
            ui.input_numeric("numeric", "Numeric input", 1, min=1, max=10), #<<
            ui.output_text_verbatim("value"),
        )
        
        def server(input, output, session):
            @output
            @render.text
            def value():
                return input.numeric()
        
        app = App(app_ui, server)
      relevantfunctions:
        - title: ui.input_numeric
          href: https://shiny.posit.co/py/api/ui.input_numeric.html
          signature: ui.input_numeric(id, label, value, *, min=None, max=None, step=None, width=None)
  
---

:::{#component}
:::

## Details

<p>A numeric input creates a way to specify a number.</p>

<p>Follow three steps to display a DataTable in your app:</p>

<ol>
  <li>
  Add `ui.output_data_frame()` to the UI of your app to create a div in which to display the table. Where you call this function will determine where the table will appear within the layout of the app. For example, ...
  </li>
  <li>
  Define a function within the `server` function that builds your table and uses `render.DataTable()` to return the result. Where`render.DataTable()`will package the table as an HTML data table for display. If your function calls reactive values, Shiny will update your table whenever those values change, in a [reactive fashion]().
  
  To notify Shiny that your function returns a reactive table to display, decorate the function with two decorators:
  
   <ul>
     <li>`@output`</li>
     <li>`@render.data_frame()`</li>
   </ul>

  </li>

  <li>Pass `ui.output_data_frame()` the name of the function that builds the DataTable, as a character string, to indicate which DataTable should be displayed in the div. 
  </li>
</ol>